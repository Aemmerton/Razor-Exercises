@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Exercise 04-D");

    var cid = Request.QueryString["cid"];
    if (cid.IsEmpty())
    {
        Response.Redirect("~/ExercisePages/Exercise04_C.cshtml");
    }

    
    var thebutton = Request.Form["theButton"];
   

    var message = "";


    Validation.Add("Title",
        Validator.StringLength(160, 0, "Maximum title length of 160 characters"),
        Validator.Required("You need a heckin album title!"));

    Validation.Add("ArtistId",
        Validator.Required("You need an Artist ID and its gotta be an Integer!"));

    Validation.Add("ReleaseYear",
        Validator.Required("You need to tell me what year it was heckin released!"),
    Validator.Range(1950, 2020, "Release year must be between 1950 and 2020"));

    Validation.Add("ReleaseLabel",
        Validator.StringLength(50, 0, "Max Label Name length 50 characters"));

    var db = Database.Open("CHINOOK");

    var artistquery = @"SELECT AlbumId, Title, ArtistId, ReleaseYear, ReleaseLabel
FROM Albums
WHERE AlbumId = @0
ORDER BY AlbumId";
    var queryAlbum = db.QuerySingle(artistquery, cid);
    var albumid = queryAlbum.AlbumId;
    var title = queryAlbum.Title;
    var artistid = queryAlbum.ArtistId;
    var releaseyear = queryAlbum.ReleaseYear;
    var releaselabel = queryAlbum.ReleaseLabel;
}



@section banner {
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    if (Validation.IsValid())
    {
        try
        {
            if (thebutton.Equals("backtosearch"))
            {
                Response.Redirect("~/ExercisePages/Exercise04_A.cshtml");
            }
            if (thebutton.Equals("update"))
            {
                var sqlcommand = "UPDATE Albums SET "
                + "Title = @0, "
                + "ArtistId = @1, "
                + "ReleaseYear = @2, "
                + "ReleaseLabel = @3 "
                + "WHERE AlbumId = @4";
                var rowsaffected = db.Execute(sqlcommand,
                string.IsNullOrEmpty(title) ? null : title,
                artistid.Equals("0") ? null : artistid,
                releaseyear,
                string.IsNullOrEmpty(releaselabel) ? null : releaselabel,
                albumid);
                if (rowsaffected > 0)
                {
                    message = "Album has been UPDATED";
                }
                else
                {
                    message = "Album NOT found";
                }
            }
            else if (thebutton.Equals("delete"))
            {
                var deleteStatement = "Delete Albums WHERE AlbumId = @0";

                var rows = db.Execute(deleteStatement, albumid);
                if (rows == 1)
                {
                    message = "Album has been DELETED";
                    title = "";
                    artistid = "";
                    releaseyear = "";
                    releaselabel = "";
                }
                else
                {
                    message = "Album NOT found";
                }

            }
        }

        catch (Exception ex)
        {
            <div class="col-12 text-center">
            <p style="color:firebrick; font-size:large">
                Processing error: @ex.Message
            </p>
            </div>
        }
    }
}
else //IsPost=false
{
    if (message != "Album NOT found")
    {
        title = queryAlbum.Title;
        artistid = queryAlbum.ArtistId == null ? "0" : queryAlbum.ArtistId.ToString();
        releaseyear = queryAlbum.ReleaseYear == null ? "0" : queryAlbum.ReleaseYear.ToString();
        releaselabel = queryAlbum.ReleaseLabel;
    }
}

@Html.ValidationSummary()

<div class="col-12 text-center">
    <p style="color:green">
        @message
    </p>
</div>
<form id="theForm" action="" method="post">
    <div class="row row-cols-2">
        <div class="col text-right">
            <releaselabel id="lblTitle" for="Title">Title</releaselabel>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value="@title" />
        </div><br />
        <div class="col text-right">
            <releaselabel id="lblArtistId" for="ArtistId" >ArtistID</releaselabel>
        </div>
        <div class="col text-left">
            <input type="text" name="ArtistId" value="@artistid" readonly/>
        </div><br />
        <div class="col text-right">
            <releaselabel id="lblReleaseYear" for="ReleaseYear">Release Year</releaselabel>
        </div>
        <div class="col text-left">
            <input type="text" name="ReleaseYear" value="@releaseyear" />
        </div><br />
        <div class="col text-right">
            <releaselabel id="lblReleaseLabel" for="ReleaseLabel">Release Label</releaselabel>
        </div>
        <div class="col text-left">
            <input type="text" name="ReleaseLabel" value="@releaselabel" />
        </div><br />


    </div>
    <div class="row">
        <div class="col-12 text-center">
            <button type="submit" name="theButton" id="theUpdate" class="btn btn-primary"
                    value="update">
                Update
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theDelete" class="btn btn-primary" formnovalidate
                    value="delete">
                Delete Record
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theCancel" class="btn btn-primary" formnovalidate
                    value="backtosearch">
                Back to Search
            </button>
        </div>
    </div>
    @* confirmation can be done on a button click using javascript
        we will ask the user to confirm the discontinuing of a product*@
    <script type="text/javascript">
        document.getElementById("theDelete").onclick = ConfirmDelete;
        function ConfirmDelete() {
            return confirm("Are you sure you want to DELETE the album - @title?");
        }
    </script>
</form>