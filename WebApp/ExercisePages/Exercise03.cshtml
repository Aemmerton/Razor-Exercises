@*Make sure Validators catch errors before the user inputs try to put new data in database*@

@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Exercise 03");

    var pid = Request.QueryString["pid"];

    var artistname = Request.Form["Name"];


    var message = "";

    //these are validator controls execute on the server side

    Validation.Add("ProductName",
         Validator.Required("Product name is required"),
         Validator.StringLength(160, 1, "Product name is limited to 160 characters"));

    Validation.Add("CategoryList",
         Validator.Range(1, 9, "Category is required"));

    Validation.Add("QuantityPerUnit",
         Validator.StringLength(40, 0, "Quantity per unit is limited to 40 characters"));

    Validation.Add("UnitPrice",
        Validator.Decimal("Unit price is a money field."),
        Validator.Range(0.00, 99.00, "Unit price must be 0.00 or more"));

    Validation.Add("UnitsInStock",
        Validator.Integer("Units in stock must be a number."),
        Validator.Range(0, 32767, "Units in stock must be between 0 and 32767"));

    Validation.Add("UnitsOnOrder",
        Validator.Integer("Units on order must be a number."),
        Validator.Range(0, 32767, "Units on order must be between 0 and 32767"));

    Validation.Add("ReorderLevel",
        Validator.Integer("Reorder level must be a number."),
        Validator.Range(0, 32767, "Reorder level must be between 0 and 32767"));


    var db = Database.Open("CHINOOK");
    var artistName = "SELECT Name "
                        + "FROM Artists "
                        + "ORDER BY Namee";
    var queryArtists = db.Query(artistName);

    string sqlcommand1 = "SELECT ArtistId, Name FROM Artists WHERE Name LIKE @0 ORDER BY Name";

    var results = db.Query(sqlcommand1);
}

@section banner {
    <h1>@Page.Title</h1>
}

@*<form id="theform" method="post">
    <div class="row">
        <div class="offset-1">
            <label id="lblartistArg" for="artistArg">Title:</label>&nbsp;&nbsp;
            <input type="text" id="artistArg" name="artistArg"
                   value="@artistarg" placeholder="partial artist name" />
            <label id="artistid">Select from the list:</label>&nbsp;&nbsp;
            <select id="artistid" name="artistid">
                <option value="">select ...</option>

                @foreach (var row in results)
                {
                    <option value="@row.ArtistId">@row.Name</option>

                }
            </select>&nbsp;&nbsp;
            <button type="submit" id="theButton" name="theButton" value="Add"
                    class="btn btn-primary">
                Add
            </button>
            <button type="reset" id="theButton" name="theButton" value="Clear"
                    class="btn btn-primary">
                Clear
            </button>
        </div>
    </div>
</form>*@
<form id="theForm" action="" method="post">
    <div class="row row-cols-2">
        <div class="col text-right">
            <label id="lblTitle" for="Title"><b>Title:</b></label>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value=""/>
        </div><br />
        <div class="col text-right">
            <label id="lblArtist" for="Name"><b>Artist:</b></label>
        </div> __________________________________________________________ YOU ARE HERE
        <div class="col text-left">
            <select name="ArtistList">
                <option value="0">select...</option>
                @foreach (var acollectionrow in queryArtists)
                {
                    if (acollectionrow.Name.ToString() == artistname)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>
        </div><br />
        <div class="col text-right">
            <label id="lblAlbumYear" for="Year"><b>Year:</b></label>
        </div>
        <div class="col text-left">
            <input type="text" name="AlbumYear" value="" />
        </div><br />
        <div class="col text-right">
            <label id="lblRecordLabel" for="Label"><b>Label:</b></label>
        </div>
        <div class="col text-left">
            <input type="text" name="RecordLabel" value="" />
        </div><br />
       
    @*<div class="row">
        <div class="col-12 text-center">
            <button type="submit" name="theButton" id="theUpdate" class="btn btn-primary"
                    value="update">
                Update
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theDiscontinue" class="btn btn-primary" formnovalidate
                    value="discontinue">
                Discontinue
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theDelete" class="btn btn-primary" formnovalidate
                    value="delete">
                Delete Record
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theCancel" class="btn btn-primary" formnovalidate
                    value="backtosearch">
                Back to Search
            </button>
        </div>
    </div>*@

    @* confirmation can be done on a button click using javascript
        we will ask the user to confirm the discontinuing of a product*@
    <script type="text/javascript">
        document.getElementById("theDiscontinue").onclick = ConfirmDiscontinue;
        function ConfirmDiscontinue() {
            return confirm("Are you sure you want to DISCONTINUE @productname?");
        }
        document.getElementById("theDelete").onclick = ConfirmDelete;
        function ConfirmDelete() {
            return confirm("Are you sure you want to DELETE @productname?");
        }
    </script>
</form>
